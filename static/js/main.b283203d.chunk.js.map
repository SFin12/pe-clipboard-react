{"version":3,"sources":["Redux/actionTypes.js","Redux/actions.js","Lib/FirebaseConfig.js","Pages/SignInPage/SignInPage.js","Lib/GoogleLogin.js","components/ConfirmModal.js","Pages/ClassesPage/ClassesPage.js","components/DropDown/DropDown.js","Pages/GradebookPage/GradebookPage.js","components/ListStudents.js","Pages/ClassesPage/StudentsPage/StudentsPage.js","Lib/saveRoster.js","Pages/ClassesPage/RosterPage/RosterPage.js","Pages/InfoPage/InfoPage.js","Pages/SettingsPage/SettingsPage.js","components/NavMenu/NavMenu.js","Redux/createStore.js","Redux/reducers.js","App.js","Lib/LinkReduxToDb.js","index.js"],"names":["UPDATE_LOGIN","UPDATE_USER_INFO","UPDATE_GOOGLEAUTH","UPDATE_PAGE","UPDATE_STORE","CREATE_CLASS","UPDATE_CLASSES","GET_CLASSES","DELETE_CLASS","CREATE_GRADEBOOK","UPDATE_GRADEBOOKLIST","DELETE_GRADEBOOK","CREATE_STUDENT","UPDATE_STUDENTLIST","updateLogin","signedIn","type","ActionTypes","payload","updatePage","currentPage","deleteClass","className","createStudent","student","updateStudentList","arrayStudentNames","console","log","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","db","getDatabase","mapDispatchToProps","updateUserInfo","id","name","email","userImg","updateGoogleAuth","googleAuth","gapi","updateStore","data","connect","state","isLoggedIn","imageUrl","props","onSuccess","googleUser","profile","getBasicProfile","getId","getName","getEmail","getImageUrl","userId","userRef","ref","onValue","snapshot","val","getUserData","onFailure","renderSigninButton","_gapi","signin2","render","scope","width","height","longtitle","theme","onsuccess","onfailure","useEffect","window","onGoogleScriptLoad","load","a","auth2","init","client_id","_googleAuth","firstJs","document","getElementsByTagName","getElementById","onload","js","createElement","src","parentNode","insertBefore","to","alt","Confirm","item","showModal","handleModal","Modal","show","centered","size","Header","closeButton","Title","Body","Footer","Button","variant","onClick","createClass","updateClassList","gradebook","classList","useState","toggleAdd","setToggleAdd","toggleDelete","setToggleDelete","buttonClass","setButtonClass","newClass","setNewClass","setShowModal","itemToDelete","setItemToDelete","history","useHistory","gb","ListClasses","length","Fragment","map","c","i","handleDelete","handleClassClick","inputClass","htmlFor","value","placeholder","onChange","e","target","handleAdd","classId","push","currentTarget","some","existingClass","icon","faPlusCircle","faMinusCircle","DropDown","toggle","bind","collapse","this","setState","color","onMouseEnter","onMouseLeave","style","marginBottom","buttonTitle","faCaretDown","isOpen","Card","inverse","CardBody","content","Component","createGradebook","gradebookName","updateGradebookList","gradebookList","input","setInput","choice","setChoice","handleChange","handleClick","ListGradebooks","class","studentList","dailyPoints","settings","studentPoints","setStudentPoints","attendance","setAttendance","classKey","slice","handleDecrement","studentId","currentPoints","prevState","handleIncrement","handleAttendance","currentAttendance","totalStudents","newState","textAlign","defaultValue","newStudent","setNewStudent","addStudentModal","onHide","toggleModal","onKeyDown","handleSave","key","cleanText","string","cleanString","isNaN","Number","toUpperCase","toLowerCase","includes","roster","setRoster","callback","csvInput","files","reader","FileReader","formattedArr","arr","result","split","cleanedStudent","readAsText","saveRoster","response","setTimeout","ListStudents","AddStudents","accept","hidden","studentsList","InfoPage","title","getClasses","getGradebookList","deleteGradebook","links","text","NavMenu","logOut","signOut","location","reload","createNavItem","NavItem","rosterNav","pop","Navbar","light","expand","fixed","NavbarBrand","href","NavbarToggler","navbar","Nav","store","createStore","action","currentGb","currentClass","gbMatch","obj","cMatch","currentCl","filter","sMatch","note1","note2","note3","todaysPoints","totalPoints","pointsPossible","gradePercentage","applyMiddleware","thunk","App","prevProps","userObject","update","writeUserData","getState","exact","path","component","ClassesPage","GradebookPage","SettingsPage","StudentsPage","RosterPage","React","withRouter","ReactDOM","StrictMode"],"mappings":"qUAEaA,EAAe,eACfC,EAAmB,mBACnBC,EAAoB,oBACpBC,EAAc,cACdC,EAAe,eAEfC,EAAe,eACfC,EAAiB,iBACjBC,EAAc,cACdC,EAAe,eAEfC,EAAmB,mBACnBC,EAAuB,uBAGvBC,EAAmB,mBASnBC,EAAiB,iBAEjBC,EAAqB,qBC1BrBC,EAAc,eAACC,EAAD,8DAAuB,CAC9CC,KAAMC,EACNC,QAAS,CACLH,cAsBKI,EAAa,WAA8B,IAA7BC,EAA4B,uDAAd,UACrC,MAAO,CACHJ,KAAMC,EACNC,QAAS,CACLE,YAAaA,KAyDZC,EAAc,SAACC,GAAD,MAAgB,CACvCN,KAAMC,EACNC,QAASI,IAGAC,EAAgB,SAACC,GAE1B,MAAO,CACHR,KAAMC,EACNC,QAASM,IAIJC,EAAoB,SAACC,GAE9B,OADAC,QAAQC,IAAI,iCAAkCF,GACvC,CACHV,KAAMC,EACNC,QAASQ,I,gBCzFXG,EAAMC,YAZW,CACnBC,OAAQC,0CACRC,WAAYD,qCACZE,UAAWF,qBACXG,cAAeH,iCACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,eACfO,YAAaP,2DAKJQ,EAAKC,YAAYZ,G,eCSxBa,EAAqB,CACvB5B,cACA6B,eFnB0B,SAACC,EAAIC,EAAMC,EAAOC,GAAlB,MAA+B,CACzD/B,KAAMC,EACNC,QAAS,CACL0B,KACAC,OACAC,QACAC,aEcJC,iBFV4B,SAACC,EAAYC,GAAb,MAAuB,CACnDlC,KAAMC,EACNC,QAAS,CACL+B,aACAC,UEOJC,YFoBuB,SAACC,GAExB,MAAO,CACHpC,KAAMC,EACNC,QAASkC,KEwGFC,mBA/IS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAMvC,SAClB6B,GAAIU,EAAMV,GACVC,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,MACbU,SAAUF,EAAMP,QAChBE,WAAYK,EAAML,cAwIcP,EAAzBW,EA1Hf,SAAoBI,GAChB,IACIF,EAQIE,EARJF,WACAV,EAOIY,EAPJZ,KACAC,EAMIW,EANJX,MACAU,EAKIC,EALJD,SACA1C,EAII2C,EAJJ3C,YACA6B,EAGIc,EAHJd,eACAK,EAEIS,EAFJT,iBACAG,EACIM,EADJN,YAwBEO,EAAY,SAACC,GAGf,IAAMC,EAAUD,EAAWE,kBACrBjB,EAAKgB,EAAQE,QACbjB,EAAOe,EAAQG,UACfjB,EAAQc,EAAQI,WAChBR,EAAWI,EAAQK,cACzBtB,EAAeC,EAAIC,EAAMC,EAAOU,GA7BpC,SAAqBU,GACjB,IAAKA,EACD,OAAOvC,QAAQC,IAAI,cAEvB,IAAMuC,EAAUC,YAAI5B,EAAI,UAAY0B,GACpCG,YAAQF,GAAS,SAACG,GACd,IAAMlB,EAAOkB,EAASC,MAUtB,OAPInB,GAEAD,EAAYC,GAKTtC,GAAY,MAcvB0D,CAAY5B,IAGV6B,EAAY,WACd3D,GAAY,IAGV4D,EAAqB,SAACC,GAExBA,EAAMC,QAAQC,OAAO,gBAAiB,CAClCC,MAAO,gBACPC,MAAO,IACPC,OAAQ,GACRC,WAAW,EACXC,MAAO,OACPC,UAAWzB,EACX0B,UAAWX,KA6BnB,OAzBAY,qBAAU,WAENC,OAAOC,mBAAqB,WAGxB,IAAMZ,EAAQW,OAAOpC,KAErByB,EAAMa,KAAK,SAAS,WAEhB,sBAAC,4BAAAC,EAAA,sEAC6Bd,EAAMe,MAAMC,KAAK,CAEvCC,UAjGD5D,6EA8FN,OACS6D,EADT,OAMG7C,EAAiB6C,EAAalB,GAC9BD,EAAmBC,GAPtB,0CAAD,OCxGX,WACG,IAAM/B,EAAK,YAILkD,EAAUC,SAASC,qBAAqB,UAAU,GAGxD,GAAID,SAASE,eAAerD,GACbmD,SAASE,eAAerD,GAChCsD,OAASZ,OAAOC,uBAFvB,CAIA,IAAMY,EAAKJ,SAASK,cAAc,UAClCD,EAAGvD,GAAKA,EACRuD,EAAGE,IAZS,yCAaZF,EAAGD,OAASZ,OAAOC,mBACnBO,EAAQQ,WAAWC,aAAaJ,EAAIL,IAhBvC,KDsHE,IAGC,8BACI,sBAAKxE,UAAU,YAAf,UACI,qBAAKA,UAAU,kBACf,sBAAKA,UAAU,YAAf,UACI,qBAAKsB,GAAG,aAAR,SACI,iDAEFW,GACE,qBAAKiD,GAAG,WAA2B5D,GAAG,iBAAf,aAG1BW,GACG,sBAAKjC,UAAU,6CAAf,UACI,8BACI,qBACIA,UAAU,iBACVmF,IAAI,UACJJ,IAAK7C,MAGb,8BAAMX,IACN,8BAAMC,kB,iEEvHnB4D,MAtBf,YAAkD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,YAE/B,OACE,mCACE,eAACC,EAAA,EAAD,CAAOC,KAAMH,EAAWI,UAAQ,EAACC,KAAK,KAAtC,UACE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAC7F,UAAU,aAApC,SACE,eAACwF,EAAA,EAAMM,MAAP,CAAa9F,UAAU,aAAvB,oBAA4CqF,EAA5C,SAEF,cAACG,EAAA,EAAMO,KAAP,CAAY/F,UAAU,YAAtB,6EACA,eAACwF,EAAA,EAAMQ,OAAP,WACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY3E,KAAK,SAAS4E,QAASZ,EAAnD,oBAGA,cAACU,EAAA,EAAD,CAAQC,QAAQ,SAAS3E,KAAK,SAAS4E,QAASZ,EAAhD,6BCKNnE,EAAqB,CACvBgF,YL6CuB,SAACpG,GAExB,MAAO,CACHN,KAAMC,EACNC,QAASI,IKhDbqG,gBLoD2B,SAACrG,GAC5B,MAAO,CACHN,KAAMC,EACNC,QAASI,IKtDbD,cACAF,cA6KWkC,mBAzLS,SAACC,GACrB,MAAO,CACHsE,UAAWtE,EAAMsE,UACjBC,UAAWvE,EAAMuE,UACjBzG,YAAakC,EAAMlC,eAqLasB,EAAzBW,EA1Kf,SAAqBI,GACjB,MAAkCqE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCJ,mBAAS,gBAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOlB,EAAP,KAAkB2B,EAAlB,KACA,EAAwCT,mBAAS,IAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KACMC,EAAUC,cACVC,EAAKnF,EAAMmE,UAajB,SAASiB,IACL,OAAIpF,EAAMoE,UAAUe,IAAOnF,EAAMoE,UAAUe,GAAIE,OAAS,EAEhD,cAAC,IAAMC,SAAP,UACI,qBAAKzH,UAAU,wCAAf,SACKmC,EAAMoE,UAAUe,GAAII,KAAI,SAACC,EAAGC,GAAJ,OACrB,wBAEI5H,UAAW6G,EACXV,QAASQ,EAAekB,EAAeC,EACvCxG,GAAIqG,EAJR,SAMKA,GALIA,EAAIC,UAYtB,KA9Bf7D,qBAAU,WAGF+C,EAFAH,EAEe,sBAIA,kBAEpB,CAACA,IAyBJ,IAAMoB,EACF,cAAC,IAAMN,SAAP,UACI,sBAAKzH,UAAU,iBAAf,UACI,uBAAOgI,QAAQ,eAAf,0BACA,sBAAKhI,UAAU,0EAAf,UACI,uBACIsB,GAAG,eACH5B,KAAK,OACLuI,MAAOlB,EACPmB,YAAY,aACZlI,UAAU,aACVmI,SAiBpB,SAAsBC,GAClBpB,EAAYoB,EAAEC,OAAOJ,UAhBT,qBAAKjI,UAAU,qBAAf,SACI,uBACIA,UAAU,mBACVgI,QAAQ,eACR1G,GAAG,aACH6E,QAASmC,EAJb,4BAkBpB,SAASR,EAAiBM,GACtB,IAAMG,EAAUH,EAAEC,OAAO/G,GACL,wBAAhBuF,IACA1E,EAAMiE,YAAYmC,GAGlBnB,EAAQoB,KAAK,cAIrB,SAASF,EAAUF,GACY,qBAAvBA,EAAEK,cAAcnH,IAChBoF,GAAcD,GAEE,eAAhB2B,EAAEC,OAAO/G,KACToF,GAAcD,GAETtE,EAAMoE,UAAUe,GAAIoB,MACjB,SAACC,GAAD,OAAmBA,IAAkB5B,OAGzC5E,EAAMiE,YAAYW,GAClB5E,EAAMkE,gBAAgBU,KAKlC,SAASc,EAAaO,GACdzB,IACAM,GAAa,GACbE,EAAgBiB,EAAEC,OAAO/G,KAUjC,OACI,eAAC,IAAMmG,SAAP,WACKnC,GACG,cAAC,EAAD,CACID,KAAM6B,EACN5B,UAAWA,EACXC,YAZhB,SAAqB6C,GACjBnB,GAAa,GACK,WAAlBmB,EAAEC,OAAO9G,MAAqBY,EAAMpC,YAAYmH,MAa5C,oBAAIlH,UAAU,SAAd,qBACA,uBAEA,qBAAKA,UAAU,gCAAf,SACI,+BACI,oBAAIA,UAAU,gBAAd,SAA+BmC,EAAMmE,gBAG7C,qBAAKtG,UAAU,iBAAf,SACKyG,EACGsB,EAEA,gCACI,cAACR,EAAD,IACA,sBAAKvH,UAAU,gCAAf,UACI,qBAAKsB,GAAG,mBAAmB6E,QAASmC,EAApC,SACI,cAAC,IAAD,CACI/G,KAAK,WACLqH,KAAMC,IACN7I,UAAU,qBAIlB,qBACImG,QAAS,kBAAMS,GAAiBD,IAChCrF,GAAG,iBAFP,SAII,cAAC,IAAD,CACIC,KAAK,cACLqH,KAAME,IACN9I,UACI2G,EACM,4BACA,oC,wDC/I/BoC,I,wDAnCX,WAAY5G,GAAQ,IAAD,8BACf,cAAMA,IACD6G,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKjH,MAAQ,CAAEkH,UAAU,GAHV,E,0CAMnB,SAAOd,GACQ,eAAXA,EAAE1I,MAAoC,UAAX0I,EAAE1I,KACvByJ,KAAKC,SAAS,CAAEF,UAAU,IAC1BC,KAAKC,SAAS,CAAEF,UAAU,M,oBAGpC,WACI,OACI,gCACI,eAAC,IAAD,CACIG,MAAM,OACNC,aAAcH,KAAKH,OACnBO,aAAcJ,KAAKH,OACnB7C,QAASgD,KAAKH,OACdQ,MAAO,CAAEC,aAAc,QAL3B,UAOKN,KAAKhH,MAAMuH,YAAa,IACzB,cAAC,IAAD,CAAiBd,KAAMe,SAE3B,cAAC,KAAD,CAAUC,OAAQT,KAAKnH,MAAMkH,SAA7B,SACI,cAACW,EAAA,EAAD,CAAMR,MAAM,OAAOS,SAAO,EAA1B,SACI,cAACC,GAAA,EAAD,UAAWZ,KAAKhH,MAAM6H,qB,GA5BvBC,cCWjB7I,I,OAAqB,CACvB8I,gBPgB2B,SAACC,GAC5B,MAAO,CACHzK,KAAMC,EACNC,QAASuK,IOlBbC,oBPsB+B,SAACD,GAChC,MAAO,CACHzK,KAAMC,EACNC,QAASuK,IOxBbtK,eAoIWkC,oBA/IS,SAACC,GACrB,MAAO,CACHsE,UAAWtE,EAAMsE,UACjB+D,cAAerI,EAAMqI,cACrBvK,YAAakC,EAAMlC,eA2IasB,GAAzBW,EAjIf,SAAuBI,GACnB,MAA0BqE,mBAAS,IAAnC,mBAAO8D,EAAP,KAAcC,EAAd,KACA,EAA4B/D,mBAAS,IAArC,mBAAOgE,EAAP,KAAeC,EAAf,KAEA,SAASC,EAAatC,GAEE,qBAAhBA,EAAEC,OAAO/G,GACTiJ,EAASnC,EAAEC,OAAOJ,OAGlBwC,EAAUrC,EAAEC,OAAOJ,OAI3B,SAAS0C,EAAYvC,GAEG,mBAAhBA,EAAEC,OAAO/G,IACTa,EAAM+H,gBAAgBI,GACtBnI,EAAMiI,oBAAoBE,KAE1BnI,EAAM+H,gBAAgBM,GACtBrI,EAAMiI,oBAAoBI,IAIlC,SAASI,IACL,OAAIzI,EAAMkI,cAAc7C,OAAS,EAEzB,eAAC,IAAMC,SAAP,WACI,mCACA,uBAAOO,QAAQ,mBAAf,8BAEA,sBAAKhI,UAAU,0EAAf,UACI,wBAEIA,UAAU,gBACVsB,GAAG,mBACH6G,SAAUuC,EACVzC,MAAOuC,EALX,SAOKrI,EAAMkI,cAAc3C,KAAI,SAACpB,EAAWsB,GACjC,OACI,wBAEIK,MAAO3B,EACP/E,KAAM+E,EAHV,SAKKA,GAJI,KAAOsB,QAS5B,qBACI5H,UAAU,qBACVmG,QAASwE,EACTrJ,GAAG,iBAHP,SAKI,uBACItB,UAAU,mBACVgI,QAAQ,qBACR1G,GAAG,uBAHP,0BAYT,KAIf,OACI,eAAC,IAAMmG,SAAP,WACI,oBAAIzH,UAAU,SAAd,uBACA,uBACA,sBAAKA,UAAU,iBAAf,UACI,kCACI,cAAC,GAAD,CACI0J,YAAY,mBACZM,QAAQ,oYAUhB,uBAEA,uBAAOhC,QAAQ,mBAAf,8BACA,sBAAKhI,UAAU,0EAAf,UACI,uBACIsB,GAAG,mBACH5B,KAAK,OACLuI,MAAOqC,EACPpC,YAAY,iBACZlI,UAAU,aACVmI,SAAUuC,IAEd,qBAAK1K,UAAU,qBAAf,SACI,uBACIA,UAAU,mBACVgI,QAAQ,mBACR1G,GAAG,iBACH6E,QAASwE,EAJb,uBAWR,cAACC,EAAD,IACA,+BACI,mDAEI,+BACI,qBAAI5K,UAAU,SAAd,cAAyBmC,EAAMmE,6B,gBC/HrDlF,I,OAAqB,CACvBvB,aACAM,oBACAF,kBA+JW8B,oBA3KS,SAACC,GAAD,MAAY,CAChClC,YAAakC,EAAMlC,YACnBwG,UAAWtE,EAAMsE,UACjBuE,MAAO7I,EAAM6I,MACb3K,QAAS8B,EAAM9B,QACf4K,YAAa9I,EAAM8I,YACnBC,YAAa/I,EAAMgJ,SAASD,eAqKQ3J,GAAzBW,EA5Jf,SAAsBI,GAClB,MAA0CqE,mBAAS,IAAnD,mBAAOyE,EAAP,KAAsBC,EAAtB,KACA,EAAoC1E,mBAAS,IAA7C,mBAAO2E,EAAP,KAAmBC,EAAnB,KACMC,EAAWlJ,EAAMmE,UAAY,IAAMnE,EAAM0I,MA6B/C,SAASH,EAAatC,GACW,gBAAzBA,EAAEC,OAAO/G,GAAGgK,MAAM,IAClBjL,QAAQC,IAAI,gBAAiB8H,EAAEC,OAAOJ,OAI9C,SAASsD,EAAgBnD,GAErB,IAAMoD,EAAYpD,EAAEC,OAAO/G,GAAG,GAAK,WAC/BmK,EAAgBR,EAAcO,GAC9BC,EAAgB,KACdA,EAENP,GAAiB,SAACQ,GAAD,oBAAC,gBACXA,GADU,mBAEZF,EAAYC,OAIrB,SAASE,EAAgBvD,GAErB,IAAMoD,EAAYpD,EAAEC,OAAO/G,GAAG,GAAK,WAC/BmK,EAAgBR,EAAcO,KAChCC,EACFP,GAAiB,SAACQ,GAAD,oBAAC,gBACXA,GADU,mBAEZF,EAAYC,OAIrB,SAASG,EAAiBxD,GACtB,IAAMoD,EAAYpD,EAAEC,OAAO/G,GAAG,GAAK,WAC/BuK,EAAoBV,EAAWK,GACnCnL,QAAQC,IAAI,kBAAmB8H,EAAEC,OAAO/G,IAEpC8J,EADsB,MAAtBS,EACc,6BAAKV,GAAN,mBAAmBK,EAAY,MACf,MAAtBK,EACO,6BAAKV,GAAN,mBAAmBK,EAAY,MAE9B,6BAAKL,GAAN,mBAAmBK,EAAY,OAkFpD,OApJAzH,qBAAU,WAGN,GAFA5B,EAAMtC,WAAW,YACKsC,EAAM2I,YAAYO,GACrB,CACf,IAAMS,EAAgB3J,EAAM2I,YAAYO,GAAU7D,OAClDnH,QAAQC,IAAI,wBAAyBwL,GACrCZ,GAAiB,WAEb,IADA,IAAIa,EAAW,GACNnE,EAAI,EAAGA,EAAIkE,EAAelE,IAAK,CACpC,IAAI4D,EAAY5D,EAAI,WACpBmE,EAAQ,6BAAQA,GAAR,mBAAmBP,EAAYrJ,EAAM4I,cAGjD,OADA1K,QAAQC,IAAI,WAAYyL,GACjBA,KAEXX,GAAc,WAEV,IADA,IAAIW,EAAW,GACNnE,EAAI,EAAGA,EAAIkE,EAAelE,IAAK,CACpC,IAAI4D,EAAY5D,EAAI,WACpBmE,EAAQ,6BAAQA,GAAR,mBAAmBP,EAAY,MAG3C,OADAnL,QAAQC,IAAI,WAAYyL,GACjBA,QAGhB,IA6CoB5J,EAAM2I,YAAYO,GAAU3D,KAAI,SAACxH,EAAS0H,GAC7D,IAAM4D,EAAY5D,EAAI,WAEtB,OACI,sBAAK5H,UAAU,UAAf,UACI,sBAAKA,UAAU,qBAAf,UAEI,uBACIA,UAAU,iCACVN,KAAK,SAEL4B,GAAIsG,EAAI,IAAM1H,EACdqB,KAAMrB,EACN+H,MAAO/H,EACPiG,QAASoF,GAJJrL,GAMT,uBACIF,UAAU,gCAEVuB,KAAK,eACL7B,KAAK,SACL4B,GAAIsG,EAAI,UACRK,MAAOgD,EAAcO,GACrBrF,QAASwF,GALJ/D,EAAI,cAQjB,sBAAK5H,UAAU,2BAA2B,cAAY,MAAtD,UACI,uBACIA,UACI,+BAEAmL,EAAWK,GAEfjK,KAAK,aACL7B,KAAK,SACL4B,GAAIsG,EAAI,cACR,cAAY,MACZK,MAAOkD,EAAWK,GAClBrF,QAASyF,IAEb,uBACI5L,UAAU,sBACVuB,KAAK,QACL7B,KAAK,SACL4B,GAAIsG,EAAI,SACR,cAAY,MACZK,MAAM,OAEV,uBACIjI,UAAU,qBACVuB,KAAK,QACL7B,KAAK,SACL4B,GAAIsG,EAAI,SACR,cAAY,MACZK,MAAM,OAEV,uBACIjI,UAAU,sBACVuB,KAAK,QACL7B,KAAK,SACL4B,GAAIsG,EAAI,SACR,cAAY,MACZK,MAAM,MAEV,uBACIjI,UAAU,+BACVwJ,MAAO,CAAEwC,UAAW,UACpBzK,KAAK,aACL7B,KAAK,OACL4B,GAAIsG,EAAI,eACR,cAAY,MACZqE,aAAa,IACb9D,SAAUuC,gBCpJ5BtJ,I,OAAqB,CACvBvB,aACAM,oBACAF,kBA0IW8B,oBAtJS,SAACC,GAAD,MAAY,CAChClC,YAAakC,EAAMlC,YACnBwG,UAAWtE,EAAMsE,UACjBuE,MAAO7I,EAAM6I,MACb3K,QAAS8B,EAAM9B,QACf4K,YAAa9I,EAAM8I,YACnBC,YAAa/I,EAAMgJ,SAASD,eAgJQ3J,GAAzBW,EAvIf,SAAsBI,GAClB,MAAwCqE,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAO0F,EAAP,KAAmBC,EAAnB,KACA,EAAkC3F,oBAAS,GAA3C,mBAAOlB,EAAP,KAAkB2B,EAAlB,KAEMoE,EAAWlJ,EAAMmE,UAAY,IAAMnE,EAAM0I,MAE/C9G,qBAAU,SAAC5B,GACPA,EAAMtC,WAAW,cAClB,IAEH,IAAMuH,EAAUC,cAEV+E,EACF,eAAC5G,EAAA,EAAD,CAAOC,KAAMH,EAAWI,UAAQ,EAACC,KAAK,KAAK0G,OAAQC,EAAnD,UACI,cAAC9G,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAC7F,UAAU,aAApC,SACI,cAACwF,EAAA,EAAMM,MAAP,CAAa9F,UAAU,aAAvB,2BAEJ,eAACwF,EAAA,EAAMO,KAAP,CAAY/F,UAAU,YAAtB,UACI,uBAAOgI,QAAQ,mCAAf,yBAGA,qBAAKhI,UAAU,gDAAf,SACI,uBACIsB,GAAG,iBACH5B,KAAK,OACLuI,MAAOiE,EACPhE,YAAY,eACZlI,UAAU,aACVmI,SAsBpB,SAAsBC,GACE,mBAAhBA,EAAEC,OAAO/G,GACT6K,EAAc/D,EAAEC,OAAOJ,OACS,gBAAzBG,EAAEC,OAAO/G,GAAGgK,MAAM,IACzBjL,QAAQC,IAAI,gBAAiB8H,EAAEC,OAAOJ,QAzB1BsE,UAAWC,MAGnB,4DAEJ,eAAChH,EAAA,EAAMQ,OAAP,WACI,cAACC,EAAA,EAAD,CACIC,QAAQ,UACR3E,KAAK,SACLD,GAAG,eACH6E,QAASqG,EAJb,iBAQA,cAACvG,EAAA,EAAD,CAAQC,QAAQ,UAAU3E,KAAK,SAAS4E,QAASmG,EAAjD,4BAeZ,SAASE,EAAWpE,GAChB/H,QAAQC,IAAI,0BAA2B8H,EAAEqE,IAAM,KAAOrE,EAAEC,OAAO/G,KAE1D4K,GAAwB,UAAV9D,EAAEqE,KAChBP,GAA8B,iBAAhB9D,EAAEC,OAAO/G,MAExBa,EAAMlC,cAAciM,GACpBC,EAAc,KAYtB,SAASG,EAAYlE,GACbA,GAA4B,qBAAvBA,EAAEK,cAAcnH,GACrB2F,GAAa,IAEbA,GAAa,GACbkF,EAAc,KAItB,OACI,eAAC,IAAM1E,SAAP,WACI,oBAAIzH,UAAU,SAAd,SAAwBmC,EAAM0I,QAC9B,uBACA,sBAAK7K,UAAU,iBAAf,UACKmC,EAAM2I,YAAYO,GACf,cAAC,GAAD,IAnBhB,WACIjE,EAAQoB,KAAK,YAsBJlD,EACG8G,EAEA,sBAAKpM,UAAU,0DAAf,UACI,qBAAKsB,GAAG,mBAAmB6E,QAASmG,EAApC,SACI,cAAC,IAAD,CACI/K,KAAK,WACLqH,KAAMC,IACN7I,UAAU,oBAIlB,cAACiG,EAAA,EAAD,CACIjG,UAAU,uBACVsB,GAAG,gBAFP,oBAOA,sBAAK6E,QA9CzB,SAAsBiC,GAClBxB,GAAiBD,IA6C2BrF,GAAG,iBAA/B,UACI,cAAC,IAAD,CACIC,KAAK,cACLqH,KAAME,IACN9I,UACI2G,EACM,2BACA,mBAGd,sC,kBCnI5B,SAAS+F,GAAUC,GACf,IAAIC,EAAcD,EAElB,OAAIC,IAAgBC,MAAMC,OAAOF,EAAY,MAKzCA,GACAA,EAAY,GAAGG,gBAAkBH,EAAY,GAAGI,eAChDH,MAAMC,OAAOF,EAAY,KALlBF,GADPE,EAAcA,EAAYtB,MAAM,IAYhCsB,GACAA,EAAYD,EAAOnF,OAAS,GAAGuF,gBAC3BH,EAAYD,EAAOnF,OAAS,GAAGwF,gBAhB1B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAiB5BC,SAASH,OAAOF,EAAYD,EAAOnF,OAAS,KAI3CkF,GAFPE,EAAcA,EAAYtB,MAAM,EAAGsB,EAAYpF,OAAS,IAIxDoF,EAAYpF,OAAS,EACdoF,EAEA,KC5Cf,IAOMxL,GAAqB,CACvBvB,aACAM,qBAuEW4B,oBAhFS,SAACC,GAAD,MAAY,CAChClC,YAAakC,EAAMlC,YACnB+K,MAAO7I,EAAM6I,MACb3K,QAAS8B,EAAM9B,QACf4K,YAAa9I,EAAM8I,eA4EiB1J,GAAzBW,EApEf,SAAoBI,GAChB,MAA4BqE,mBAAS,IAArC,mBAAO0G,EAAP,KAAeC,EAAf,KACM/F,EAAUC,cAEhB,SAASqD,EAAatC,IDxBnB,SAAoBA,EAAGgF,GAC1B,IAAMC,EAAWjF,EAAEC,OAAOiF,MAAM,GAC1BC,EAAS,IAAIC,WACfC,EAAe,GACnBpN,QAAQC,IAAI,qBAAsBmN,GAElCF,EAAO3I,OAAS,WACZ,IADwB,EAClB8I,EAAMH,EAAOI,OAAOC,MAAM,MADR,eAGJF,GAHI,IAGxB,2BAAyB,CAAC,IAChBG,EAAiBnB,GADF,SAEjBmB,IACAJ,EAAY,uBAAOA,GAAP,CAAqBI,MANjB,8BAUxB,OADAxN,QAAQC,IAAI,4BAA6BmN,EAAa,IAC/CL,EAASK,IAKpBF,EAAOO,WAAWT,GCIdU,CAAW3F,GAAG,SAAC4F,GACXb,EAAUa,GACV3N,QAAQC,IAAI,aAAc0N,GAC1B7L,EAAMhC,kBAAkB6N,MAI5BC,YAAW,WACP7G,EAAQoB,KAAK,eACd,KAGP,SAAS0F,KAET,SAASC,IACL,OACI,cAAC,IAAM1G,SAAP,UACI,sBAAKzH,UAAU,iBAAf,UACI,kCACI,cAAC,GAAD,CACI0J,YAAY,oBACZM,QAAQ,mVAGhB,uBACA,cAAC/D,EAAA,EAAD,CACIC,QAASgH,EAAS,UAAY,UAC9BlN,UAAU,OAFd,SAII,uBAAOgI,QAAQ,gBAAgBhI,UAAU,GAAzC,SACKkN,EAAS,UAAY,kBAG9B,sBAAKlN,UAAU,0EAAf,UACI,uBACIsB,GAAG,gBACH5B,KAAK,OACL0O,OAAO,OACPpO,UAAU,OACVmI,SAAUuC,EACV2D,QAAM,IAEV,qBAAKrO,UAAU,qBAAf,SACI,8GAWxB,OACI,eAAC,IAAMyH,SAAP,WACI,oBAAIzH,UAAU,SAAd,SAAwBmC,EAAM0I,QAC9B,uBACC1I,EAAMmM,aAAe,cAACJ,EAAD,IAAmB,cAACC,EAAD,UC7E9C,SAASI,GAAT,GAA0B,EAAPC,MACtB,OACI,gCACA,oBAAIxO,UAAU,SAAd,kBACA,0BCAR,IASMoB,GAAqB,CACvBqN,Wb+DsB,iBAAO,CAC7B/O,KAAMC,Ia/DN+O,iBbqC4B,iBAAO,CACnChP,KD3C6B,sBcM7BiP,gBbyC2B,SAACxE,GAAD,MAAoB,CAC/CzK,KAAMC,EACNC,QAASuK,Ia1CTpK,eAgBWgC,oBA7BS,SAACC,GACrB,MAAO,CACHsE,UAAWtE,EAAMsE,UACjBoI,iBAAkB1M,EAAM0M,iBACxBnI,UAAWvE,EAAMuE,UACjBzG,YAAakC,EAAMlC,eAwBasB,GAAzBW,EAbR,SAAsBI,GAEzB,OADA9B,QAAQC,IAAI,kBAAkB6B,EAAMrC,aAEhC,eAAC,IAAM2H,SAAP,WACI,oBAAIzH,UAAU,SAAd,sBACA,uBACA,qBAAKA,UAAU,yB,8EClBrB4O,GAAQ,CACV,CAAE1J,GAAI,WAAY2J,KAAM,UAAWpC,IAAK,SACxC,CAAEvH,GAAI,aAAc2J,KAAM,YAAapC,IAAK,SAC5C,CAAEvH,GAAI,QAAS2J,KAAM,QACrB,CAAE3J,GAAI,YAAa2J,KAAM,WAAYpC,IAAK,SAC1C,CAAEvH,GAAI,IAAK2J,KAAM,SAAUpC,IAAK,UAW9BrL,GAAqB,CACvB5B,cACAK,cAEEiP,G,kDACF,WAAY3M,GAAQ,IAAD,8BACf,cAAMA,IAmCV4M,OAAS,WACL,sBAAC,sBAAA5K,EAAA,sEACS,EAAKhC,MAAMR,WAAWA,WAAWqN,UAD1C,OAEG,EAAK7M,MAAM3C,aAAY,GAEvBwE,OAAOiL,SAASC,SAJnB,0CAAD,IArCe,EAsDnBC,cAAgB,gBAAGjK,EAAH,EAAGA,GAAI2J,EAAP,EAAOA,KAAM7O,EAAb,EAAaA,UAAWyM,EAAxB,EAAwBA,IAAxB,OACZ,cAAC2C,GAAA,EAAD,UAEI,cAAC,KAAD,CAEIlK,GAAIA,EACJlF,UAAS,UAAKA,EAAL,aACTmG,QAAS,EAAKwE,YACdkE,KAAMA,EALV,SAOKA,GANIpC,IAHC,WAAaA,IApD3B,EAAKzK,MAAQ,CACT4H,QAAQ,EACRyF,WAAW,GAGf,EAAKrG,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAK0B,YAAc,EAAKA,YAAY1B,KAAjB,gBATJ,E,sDAYnB,WACmC,aAA3BE,KAAKhH,MAAMrC,YAEU,IAAjB8O,GAAMpH,SACNoH,GAAMpG,KAAK,CAAEtD,GAAI,UAAW2J,KAAM,SAAUpC,IAAK,UACjDtD,KAAKC,SAAS,CAAEiG,WAAW,KAGG,aAA3BlG,KAAKhH,MAAMrC,aAEG,IAAjB8O,GAAMpH,SACNoH,GAAMU,MACNnG,KAAKC,SAAS,CAAEiG,WAAW,O,oBAMvC,WACIlG,KAAKC,SAAS,CACVQ,QAAST,KAAKnH,MAAM4H,W,yBAc5B,SAAYxB,GACc,WAAlBA,EAAEC,OAAOwG,MACT1F,KAAK4F,SAET5F,KAAKhH,MAAMtC,WAAWuI,EAAEC,OAAOwG,MAC/B1F,KAAKH,W,oBAkBT,WACI,OACI,8BACI,eAACuG,GAAA,EAAD,CAAQlG,MAAM,OAAOmG,OAAK,EAACC,OAAO,KAAKC,MAAM,MAA7C,UACI,cAACC,GAAA,EAAD,CAAa3P,UAAU,WAAW4P,KAAK,IAAvC,0BAGA,cAACC,GAAA,EAAD,CACI7P,UAAU,WACVsB,GAAG,UACH6E,QAASgD,KAAKH,SAElB,cAAC,KAAD,CAAUY,OAAQT,KAAKnH,MAAM4H,OAAQkG,QAAM,EAA3C,SACI,cAACC,GAAA,EAAD,CAAK/P,UAAU,mBAAmB8P,QAAM,EAAxC,SACKlB,GAAMlH,IAAIyB,KAAKgG,4B,GApFtBlF,aA6FPlI,gBAzGS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAMvC,SAClBkC,WAAYK,EAAML,WAClB7B,YAAakC,EAAMlC,eAqGasB,GAAzBW,CAA6C+M,I,kBCjG/CkB,GAAQC,cC5BM,SAACjO,EAAOkO,GAE/B,IAAMC,EAAYnO,EAAMsE,UAClB8J,EAAepO,EAAM6I,MAG3B,OADAxK,QAAQC,IAAI,qBAAsB4P,EAAOxQ,KAAO,KAAOwQ,EAAOtQ,SACtDsQ,EAAOxQ,MACX,KAAKC,EACD,OAAO,6BAAKqC,GAAZ,IAAmBvC,SAAUyQ,EAAOtQ,UACxC,KAAKD,EACD,OAAO,6BAAKqC,GAAUkO,EAAOtQ,SACjC,KAAKD,EACD,OAAO,6BAAKqC,GAAZ,IAAmBL,WAAYuO,EAAOtQ,UAC1C,KAAKD,EACD,OAAO,6BAAKqC,GAAZ,IAAmBlC,YAAaoQ,EAAOtQ,QAAQE,cACnD,KAAKH,EAED,OADAU,QAAQC,IAAI,mBAAoB4P,EAAOtQ,SAChC,6BAAKoC,GAAUkO,EAAOtQ,SACjC,KAAKD,EACD,OAAO,6BAAKqC,GAAZ,IAAmBsE,UAAW4J,EAAOtQ,UACzC,KAAKD,EACD,IAAM0Q,EAAUH,EAAOtQ,QAEvB,OAAKoC,EAAMqI,cAAc3B,MAAK,SAAC4H,GAAD,OAASA,IAAQD,KAMpC,gBAAKrO,GALL,6BACAA,GADP,IAEIqI,cAAc,GAAD,oBAAMrI,EAAMqI,eAAZ,CAA2B6F,EAAOtQ,YAK3D,IjBlBqB,gBiBoBrB,KAAKD,EAoCL,KAAKA,EACD,OAAO,gBAAKqC,GAlChB,KAAKrC,EAED,OADAU,QAAQC,IAAI,yBAA0B4P,EAAOtQ,SACtC,6BAAKoC,GAAZ,IAAmB6I,MAAOqF,EAAOtQ,UAErC,KAAKD,EACD,IAAM4Q,EAASL,EAAOtQ,QAEtB,OACIoC,EAAMuE,UAAU4J,KACfnO,EAAMuE,UAAU4J,GAAWzH,MAAK,SAAC4H,GAAD,OAASA,IAAQC,KAE3C,6BACAvO,GADP,IAEIuE,UAAU,6BACHvE,EAAMuE,WADJ,mBAEJ4J,EAFI,uBAGEnO,EAAMuE,UAAU4J,IAHlB,CAIDD,EAAOtQ,cAIXoC,EAAMuE,UAAU4J,UAUrB,gBAAKnO,IATR3B,QAAQC,IAAI,qCACL,6BACA0B,GADP,IAEIuE,UAAU,6BACHvE,EAAMuE,WADJ,mBAEJ4J,EAAY,CAACD,EAAOtQ,cAQrC,KAAKD,EACD,IAAM6Q,EAAYxO,EAAMuE,UAAU4J,GAAWM,QACzC,SAACpL,GAAD,OAAUA,IAAS6K,EAAOtQ,WAE9B,OAAO,6BACAoC,GADP,IAEIuE,UAAU,6BAAMvE,EAAMuE,WAAb,mBAAyB4J,EAAYK,MAGtD,KAAK7Q,EACD,IAAM+Q,EAASR,EAAOtQ,QAEtB,OACIoC,EAAM8I,YAAYqF,EAAY,IAAMC,KACnCpO,EAAM8I,YAAYqF,EAAY,IAAMC,GAAc1H,MAC/C,SAACxI,GAAD,OAAaA,IAAYwQ,MAG7BrQ,QAAQC,IAAI,mBAAoB4P,EAAOtQ,SACvCS,QAAQC,IAAR,6BACO0B,GADP,IAEI8I,YAAY,6BACL9I,EAAM8I,aADF,mBAENqF,EAAY,IAAMC,EAFZ,uBAGApO,EAAM8I,YACLqF,EAAY,IAAMC,IAJnB,CAMHF,EAAOtQ,eAIZ,6BACAoC,GADP,IAEI8I,YAAY,6BACL9I,EAAM8I,aADF,mBAENqF,EAAY,IAAMC,EAFZ,uBAGApO,EAAM8I,YACLqF,EAAY,IAAMC,IAJnB,CAMHF,EAAOtQ,gBAKnBS,QAAQC,IAAI,sBACL,gBAAK0B,IAGpB,KAAKrC,EAMD,OALAU,QAAQC,IAAI,8BAA+B0B,EAAM6I,OACjDxK,QAAQC,IACJ,4BACO0B,EAAM8I,YAAYsF,IAEzBpO,EAAM8I,YAAYqF,EAAY,IAAMC,GAC7B,6BACApO,GADP,mBAEKA,EAAM8I,YAAYqF,EAAY,IAAMC,GAFzC,aAGWF,EAAOtQ,WAKjBoC,EAAM8I,YAAYqF,EAAY,IAAMC,GAUlC,gBAAKpO,IATR3B,QAAQC,IAAI,iCACL,6BACA0B,GADP,IAEI8I,YAAY,6BACL9I,EAAM8I,aADF,mBAENqF,EAAY,IAAMC,EAFZ,aAE+BF,EAAOtQ,cAK7D,QAEI,OADAS,QAAQC,IAAI,wBAAyB4P,GAC9BlO,KDjJE,CACjBvC,UAAU,EACV6B,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTE,WAAY,GACZ7B,YAAa,UACbwG,UAAW,GACX+D,cAAe,GACfQ,MAAO,GACPtE,UAAW,GACXrG,QAAS,GACT4K,YAAa,GACbE,SAAU,CACND,YAAa,GACb4F,MAAO,KACPC,MAAO,KACPC,MAAO,KAEXC,aAAc,GACdC,YAAa,GACbC,eAAgB,GAChBC,gBAAiB,IAMjBC,aAAgBC,OEbpB,IAcM/P,GAAqB,CACvBvB,cAGEuR,G,uKACF,YACKjI,KAAKhH,MAAMmE,WAAa6C,KAAKhH,MAAMtC,WAAW,e,gCAInD,SAAmBwR,EAAW3F,GAG1B,GACKvC,KAAKhH,MAAM1C,UAAY4R,EAAU/P,KAAO6H,KAAKhH,MAAMb,IACpD+P,EAAU/K,YAAc6C,KAAKhH,MAAMmE,WACnC+K,EAAUhH,gBAAkBlB,KAAKhH,MAAMkI,eACvCgH,EAAU9K,YAAc4C,KAAKhH,MAAMoE,WACnC8K,EAAUvG,cAAgB3B,KAAKhH,MAAM2I,YACvC,CACE,IAAMwG,EAAa,CACfhQ,GAAI6H,KAAKhH,MAAMb,GACfC,KAAM4H,KAAKhH,MAAMZ,KACjBC,MAAO2H,KAAKhH,MAAMX,MAClBC,QAAS0H,KAAKhH,MAAMV,QACpB6E,UAAW6C,KAAKhH,MAAMmE,UACtB+D,cAAelB,KAAKhH,MAAMkI,cAC1B9D,UAAW4C,KAAKhH,MAAMoE,UACtBsE,MAAO1B,KAAKhH,MAAM0I,MAClB3K,QAASiJ,KAAKhH,MAAMjC,QACpB4K,YAAa3B,KAAKhH,MAAM2I,aAGxB3B,KAAKhH,MAAMb,KACXjB,QAAQC,IAAI,gBAAiB6I,KAAKhH,MAAM2I,aCjEjD,SAAuBlI,EAAQ0O,GAClC,GAAIxO,YAAI5B,EAAI,UAAY0B,GAAS,CAC7B,IAAMC,EAAUC,YAAI5B,EAAI,UAAY0B,GAChC0O,GAEAC,YAAO1O,EAASyO,ID6DZE,CAAcrI,KAAKhH,MAAMb,GAAIgQ,O,oBAKzC,WAAU,IAAD,OAGL,OAFAjR,QAAQC,IAAI,QAAS0P,GAAMyB,YAIvB,aADA,CACA,OAAKzR,UAAU,MAAf,SACKmJ,KAAKhH,MAAM1C,SACR,eAAC,IAAMgI,SAAP,WACI,cAAC,GAAD,IACA,sBAAMzH,UAAU,YAAhB,SACI,eAAC,IAAD,WAGI,cAAC,IAAD,CACI0R,OAAK,EACLC,KAAK,IACLpO,OAAQ,WACJ,OAAO,EAAKpB,MAAMmE,UACd,cAAC,IAAD,CAAUpB,GAAG,aAEb,cAAC,IAAD,CAAUA,GAAG,kBAIzB,cAAC,IAAD,CACIwM,OAAK,EACLC,KAAK,WACLC,UAAWC,IAEf,cAAC,IAAD,CACIH,OAAK,EACLC,KAAK,aACLC,UAAWE,KAEf,cAAC,IAAD,CACIJ,OAAK,EACLC,KAAK,QACLpO,OAAQ,kBACJ,cAACgL,GAAD,CACIC,MAAO,EAAKrM,MAAMrC,iBAI9B,cAAC,IAAD,CACI4R,OAAK,EACLC,KAAK,YACLC,UAAWG,KAEf,cAAC,IAAD,CACIL,OAAK,EACLC,KAAK,YACLC,UAAWI,KAEf,cAAC,IAAD,CACIN,OAAK,EACLC,KAAK,UACLC,UAAWK,aAM3B,cAAC,EAAD,U,GAlGFC,IAAMjI,WAyGTkI,eAAWpQ,aA3HF,SAACC,GAAD,MAAY,CAChCvC,SAAUuC,EAAMvC,SAChB6B,GAAIU,EAAMV,GACVE,MAAOQ,EAAMR,MACbD,KAAMS,EAAMT,KACZE,QAASO,EAAMP,QACf6E,UAAWtE,EAAMsE,UACjB+D,cAAerI,EAAMqI,cACrB9D,UAAWvE,EAAMuE,UACjBsE,MAAO7I,EAAM6I,MACb3K,QAAS8B,EAAM9B,QACf4K,YAAa9I,EAAM8I,eAgH4B1J,GAAzBW,CAA6CqP,KErIvEgB,IAAS7O,OACL,cAAC,IAAM8O,WAAP,UACI,cAAC,IAAD,CAAUrC,MAAOA,GAAjB,SACI,cAAC,KAAD,UACI,cAAC,GAAD,UAIZvL,SAASE,eAAe,U","file":"static/js/main.b283203d.chunk.js","sourcesContent":["//action types for redux\n\nexport const UPDATE_LOGIN = \"UPDATE_LOGIN\";\nexport const UPDATE_USER_INFO = \"UPDATE_USER_INFO\";\nexport const UPDATE_GOOGLEAUTH = \"UPDATE_GOOGLEAUTH\";\nexport const UPDATE_PAGE = \"UPDATE_PAGE\";\nexport const UPDATE_STORE = \"UPDATE_STORE\";\n\nexport const CREATE_CLASS = \"CREATE_CLASS\";\nexport const UPDATE_CLASSES = \"UPDATE_CLASSES\";\nexport const GET_CLASSES = \"GET_CLASSES\";\nexport const DELETE_CLASS = \"DELETE_CLASS\";\n\nexport const CREATE_GRADEBOOK = \"CREATE_GRADEBOOK\";\nexport const UPDATE_GRADEBOOKLIST = \"UPDATE_GRADEBOOKLIST\";\nexport const GET_GRADEBOOK = \"GET_GRADEBOOK\";\nexport const GET_GRADEBOOKLIST = \"GET_GRADEBOOKLIST\";\nexport const DELETE_GRADEBOOK = \"DELETE_GRADEBOOK\";\n\nexport const UPDATE_ROSTER = \"UPDATE_ROSTER\";\n\n\nexport const UPDATE_SETTINGS = \"UPDATE_SETTINGS\";\n\nexport const UPDATE_DATABASE = \"UPDATE_DATABASE\";\n\nexport const CREATE_STUDENT = \"CREATE_STUDENT\";\nexport const DELETE_STUDENT = \"UPDATE_SETTINGS\";\nexport const UPDATE_STUDENTLIST = \"UPDATE_STUDENTLIST\";\n\nexport const UPDATE_GRADES = \"UPDATE_GRADES\";\n\n","import * as ActionTypes from \"./actionTypes\";\n\nexport const updateLogin = (signedIn = false) => ({\n    type: ActionTypes.UPDATE_LOGIN,\n    payload: {\n        signedIn,\n    },\n});\n\nexport const updateUserInfo = (id, name, email, userImg) => ({\n    type: ActionTypes.UPDATE_USER_INFO,\n    payload: {\n        id,\n        name,\n        email,\n        userImg,\n    },\n});\n\nexport const updateGoogleAuth = (googleAuth, gapi) => ({\n    type: ActionTypes.UPDATE_GOOGLEAUTH,\n    payload: {\n        googleAuth,\n        gapi,\n    },\n});\n\nexport const updatePage = (currentPage = \"Classes\") => {\n    return {\n        type: ActionTypes.UPDATE_PAGE,\n        payload: {\n            currentPage: currentPage,\n        },\n    };\n};\n\nexport const createGradebook = (gradebookName) => {\n    return {\n        type: ActionTypes.CREATE_GRADEBOOK,\n        payload: gradebookName,\n    };\n};\n\nexport const updateGradebookList = (gradebookName) => {\n    return {\n        type: ActionTypes.UPDATE_GRADEBOOKLIST,\n        payload: gradebookName,\n    };\n};\n\nexport const updateStore = (data) => {\n \n    return {\n        type: ActionTypes.UPDATE_STORE,\n        payload: data,\n    };\n};\n\nexport const getGradebookList = () => ({\n    type: ActionTypes.GET_GRADEBOOKLIST,\n    //async fetch to get list of gradebooks from google api\n});\n\nexport const deleteGradebook = (gradebookName) => ({\n    type: ActionTypes.DELETE_GRADEBOOK,\n    payload: gradebookName,\n});\n\nexport const createClass = (className) => {\n   \n    return {\n        type: ActionTypes.CREATE_CLASS,\n        payload: className,\n    };\n};\n\nexport const updateClassList = (className) => {\n    return {\n        type: ActionTypes.UPDATE_CLASSES,\n        payload: className,\n    };\n};\n\nexport const getClasses = () => ({\n    type: ActionTypes.GET_CLASSES,\n    //async fetch to get classes from google api\n});\n\nexport const deleteClass = (className) => ({\n    type: ActionTypes.DELETE_CLASS,\n    payload: className,\n});\n\nexport const createStudent = (student) => {\n   \n    return {\n        type: ActionTypes.CREATE_STUDENT,\n        payload: student,\n    };\n};\n\nexport const updateStudentList = (arrayStudentNames) => {\n    console.log(\"updating Student List: \", typeof(arrayStudentNames))\n    return {\n        type: ActionTypes.UPDATE_STUDENTLIST,\n        payload: arrayStudentNames,\n    };\n};\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"@firebase/app\";\nimport { getDatabase } from \"@firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getDatabase(app);\n","import { connect } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { loadGoogleScript } from \"../../Lib/GoogleLogin\";\nimport {\n    updateLogin,\n    updateUserInfo,\n    updateGoogleAuth,\n    updateStore,\n} from \"../../Redux/actions\";\nimport { db } from \"../../Lib/FirebaseConfig\";\nimport { ref, onValue } from \"firebase/database\";\n\n\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.signedIn,\n        id: state.id,\n        name: state.name,\n        email: state.email,\n        imageUrl: state.userImg,\n        googleAuth: state.googleAuth,\n    };\n};\n\nconst mapDispatchToProps = {\n    updateLogin,\n    updateUserInfo,\n    updateGoogleAuth,\n    updateStore,\n};\n\n//Part of this page came from the following tutorial...\n//https://www.quod.ai/post/how-to-integrate-google-api-into-your-react-app\n\nfunction SignInPage(props) {\n    const {\n        isLoggedIn,\n        name,\n        email,\n        imageUrl,\n        updateLogin, \n        updateUserInfo, \n        updateGoogleAuth, \n        updateStore\n        } = props;\n    //fetch current user data to update redux store when first loading\n    function getUserData(userId) {\n        if (!userId) {\n            return console.log(\"No user Id\");\n        }\n        const userRef = ref(db, \"/users/\" + userId);\n        onValue(userRef, (snapshot) => {\n            const data = snapshot.val();\n  \n            //check if user has any saved data\n            if (data) {\n                //updates redux store with user data stored in realtime database from firebase\n                updateStore(data);\n            } \n            // else {\n            //     writeUserData()\n            // }\n            return updateLogin(true);\n        });\n    \n    }\n\n    const onSuccess = (googleUser) => {\n        // (Ref. 7)\n\n        const profile = googleUser.getBasicProfile();\n        const id = profile.getId();\n        const name = profile.getName();\n        const email = profile.getEmail();\n        const imageUrl = profile.getImageUrl();\n        updateUserInfo(id, name, email, imageUrl);\n        getUserData(id);\n    };\n\n    const onFailure = () => {\n        updateLogin(false);\n    };\n\n    const renderSigninButton = (_gapi) => {\n        // (Ref. 6)\n        _gapi.signin2.render(\"google-signin\", {\n            scope: \"profile email\",\n            width: 240,\n            height: 50,\n            longtitle: true,\n            theme: \"dark\",\n            onsuccess: onSuccess,\n            onfailure: onFailure,\n        });\n    };\n\n    useEffect(() => {\n        // Window.gapi is available at this point\n        window.onGoogleScriptLoad = () => {\n            // (Ref. 1)\n      \n            const _gapi = window.gapi; // (Ref. 2)\n\n            _gapi.load(\"auth2\", () => {\n                // (Ref. 3)\n                (async () => {\n                    const _googleAuth = await _gapi.auth2.init({\n                        // (Ref. 4)\n                        client_id: googleClientId,\n                    });\n\n                    updateGoogleAuth(_googleAuth, _gapi); //updates redux store for global access\n                    renderSigninButton(_gapi); // (Ref. 6)\n                })();\n            });\n        };\n\n        // Ensure everything is set before loading the script\n        loadGoogleScript(); // (Ref. 9)\n    }, []);\n\n    return (\n        <div>\n            <div className=\"clipboard\">\n                <div className=\"clipboard top\"></div>\n                <div className=\"flex-fill\">\n                    <div id=\"main-title\">\n                        <h2>PE Clipboard</h2>\n                    </div>\n                    {!isLoggedIn && (\n                        <div to=\"/classes\" key=\"signInKey\" id=\"google-signin\" />\n                    )}\n\n                    {isLoggedIn && (\n                        <div className=\"d-flex flex-column align-items-center mb-3\">\n                            <div>\n                                <img\n                                    className=\"rounded-circle\"\n                                    alt=\"profile\"\n                                    src={imageUrl}\n                                />\n                            </div>\n                            <div>{name}</div>\n                            <div>{email}</div>\n\n                            {/* <button className=\"btn-primary\" onClick={logOut}>\n                                Log Out\n                            </button> */}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);\n","export const loadGoogleScript = () => {\n  \n    //loads the Google JavaScript Library\n    (function () {\n        const id = 'google-js';\n        const src = 'https://apis.google.com/js/platform.js';\n        \n        //we have at least one script (React)\n        const firstJs = document.getElementsByTagName('script')[0];\n        \n        //prevent script from loading twice\n        if (document.getElementById(id)) { \n            const js = document.getElementById(id);\n            js.onload = window.onGoogleScriptLoad;\n            return; }\n        const js = document.createElement('script'); \n        js.id = id;\n        js.src = src;\n        js.onload = window.onGoogleScriptLoad; \n        firstJs.parentNode.insertBefore(js, firstJs);\n    }());    \n    \n}","import React from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\n\n\nfunction Confirm({item, showModal, handleModal}) {\n\n    return (\n      <>\n        <Modal show={showModal} centered size='lg'>\n          <Modal.Header closeButton className=\"bg-warning\">\n            <Modal.Title className=\"text-black\">Delete {item}?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"text-dark\" >You will also lose the student roster associated with the class</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" name=\"cancel\" onClick={handleModal}>\n              Cancel\n            </Button>\n            <Button variant=\"danger\" name=\"delete\" onClick={handleModal}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n  \nexport default Confirm;","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    createClass,\n    updateClassList,\n    deleteClass,\n    updatePage,\n} from \"../../Redux/actions\";\nimport { useHistory } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./ClassesPage.scss\";\nimport Confirm from \"../../components/ConfirmModal\";\n\nconst mapStateToProps = (state) => {\n    return {\n        gradebook: state.gradebook,\n        classList: state.classList,\n        currentPage: state.currentPage,\n    };\n};\n\nconst mapDispatchToProps = {\n    createClass,\n    updateClassList,\n    deleteClass,\n    updatePage,\n};\n\nfunction ClassesPage(props) {\n    const [toggleAdd, setToggleAdd] = useState(false);\n    const [toggleDelete, setToggleDelete] = useState(false);\n    const [buttonClass, setButtonClass] = useState(\"class-button\");\n    const [newClass, setNewClass] = useState(\"\");\n    const [showModal, setShowModal] = useState(false);\n    const [itemToDelete, setItemToDelete] = useState(\"\");\n    const history = useHistory();\n    const gb = props.gradebook;\n\n    useEffect(() => {\n        if (toggleDelete) {\n            //highlights classes in red to show they can be deleted.\n            setButtonClass(\"delete-class-button\");\n            \n            //removes red highlight, clickon on them will not delete but rather take you to student page.\n        } else {\n            setButtonClass(\"class-button\");\n        }\n    }, [toggleDelete]);\n\n    function ListClasses() {\n        if (props.classList[gb] && props.classList[gb].length > 0) {\n            return (\n                <React.Fragment>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        {props.classList[gb].map((c, i) => (\n                            <button\n                                key={c + i}\n                                className={buttonClass}\n                                onClick={toggleDelete ? handleDelete : handleClassClick }\n                                id={c}\n                            >\n                                {c}\n                            </button>\n                        ))}\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    const inputClass = (\n        <React.Fragment>\n            <div className=\"form-container\">\n                <label htmlFor=\"create-class\">Create class</label>\n                <div className=\"input-group mb-3 d-flex justify-content-center justify-content-md-start\">\n                    <input\n                        id=\"create-class\"\n                        type=\"text\"\n                        value={newClass}\n                        placeholder=\"class Name\"\n                        className=\"text-input\"\n                        onChange={handleChange}\n                    />\n                    <div className=\"input-group-append\">\n                        <label\n                            className=\"input-group-text\"\n                            htmlFor=\"create-class\"\n                            id=\"save-class\"\n                            onClick={handleAdd}\n                        >\n                            save\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    function handleChange(e) {\n        setNewClass(e.target.value);\n    }\n\n    function handleClassClick(e) {\n        const classId = e.target.id;\n        if (buttonClass !== \"delete-class-button\") {\n            props.createClass(classId);\n\n            //redirects to studentsPage\n            history.push(\"/students\");\n        }\n    }\n\n    function handleAdd(e) {\n        if (e.currentTarget.id === \"add-class-button\") {\n            setToggleAdd(!toggleAdd);\n        }\n        if (e.target.id === \"save-class\") {\n            setToggleAdd(!toggleAdd);\n            if (\n                !props.classList[gb].some(\n                    (existingClass) => existingClass === newClass\n                )\n            ) {\n                props.createClass(newClass);\n                props.updateClassList(newClass);\n            }\n        }\n    }\n\n    function handleDelete(e) {\n        if (toggleDelete) {\n            setShowModal(true);\n            setItemToDelete(e.target.id);\n        }\n    }\n\n    function handleModal(e) {\n        setShowModal(false);\n        e.target.name === \"delete\" && props.deleteClass(itemToDelete);\n    }\n\n    // Main return for ClassPage\n    return (\n        <React.Fragment>\n            {showModal && (\n                <Confirm\n                    item={itemToDelete}\n                    showModal={showModal}\n                    handleModal={handleModal}\n                />\n            )}\n            <h1 className=\"header\">Classes</h1>\n            <hr />\n\n            <div className=\"d-flex justify-content-center\">\n                <span>\n                    <h2 className=\"subtitle mb-4\">{props.gradebook}</h2>\n                </span>\n            </div>\n            <div className=\"form-container\">\n                {toggleAdd ? (\n                    inputClass\n                ) : (\n                    <div>\n                        <ListClasses />\n                        <div className=\"d-flex justify-content-around\">\n                            <div id=\"add-class-button\" onClick={handleAdd}>\n                                <FontAwesomeIcon\n                                    name=\"add-icon\"\n                                    icon={faPlusCircle}\n                                    className=\"plus-icon mt-4\"\n                                />\n                            </div>\n\n                            <div\n                                onClick={() => setToggleDelete(!toggleDelete)}\n                                id=\"delete-a-class\"\n                            >\n                                <FontAwesomeIcon\n                                    name=\"delete-icon\"\n                                    icon={faMinusCircle}\n                                    className={\n                                        toggleDelete\n                                            ? \"minus-icon mt-4 highlight\"\n                                            : \"minus-icon mt-4\"\n                                    }\n                                />\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClassesPage);\n","import { faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { Component } from \"react\";\nimport { Button, CardBody, Card } from \"reactstrap\";\nimport Collapse from \"reactstrap/lib/Collapse\";\n\nimport \"./DropDown.scss\";\n\nclass DropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = { collapse: false };\n    }\n\n    toggle(e) {\n        e.type === \"mouseenter\" || e.type === \"click\"\n            ? this.setState({ collapse: true })\n            : this.setState({ collapse: false });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button\n                    color=\"dark\"\n                    onMouseEnter={this.toggle}\n                    onMouseLeave={this.toggle}\n                    onClick={this.toggle}\n                    style={{ marginBottom: \"1rem\" }}\n                >\n                    {this.props.buttonTitle}{\" \"}\n                    <FontAwesomeIcon icon={faCaretDown} />\n                </Button>\n                <Collapse isOpen={this.state.collapse}>\n                    <Card color=\"dark\" inverse>\n                        <CardBody>{this.props.content}</CardBody>\n                    </Card>\n                </Collapse>\n            </div>\n        );\n    }\n}\n\nexport default DropDown;\n","import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n    createGradebook,\n    updateGradebookList,\n    updatePage,\n} from \"../../Redux/actions\";\nimport DropDown from \"../../components/DropDown/DropDown\";\nimport \"./GradebookPage.scss\";\n\nconst mapStateToProps = (state) => {\n    return {\n        gradebook: state.gradebook,\n        gradebookList: state.gradebookList,\n        currentPage: state.currentPage,\n    };\n};\n\nconst mapDispatchToProps = {\n    createGradebook,\n    updateGradebookList,\n    updatePage,\n};\n\nfunction GradebookPage(props) {\n    const [input, setInput] = useState(\"\");\n    const [choice, setChoice] = useState(\"\");\n\n    function handleChange(e) {\n        // If gradebook is being created\n        if (e.target.id === \"create-gradebook\") {\n            setInput(e.target.value);\n            // If gradebook is being selected\n        } else {\n            setChoice(e.target.value);\n        }\n    }\n\n    function handleClick(e) {\n        // If gradebook was created and saved\n        if (e.target.id === \"save-gradebook\") {\n            props.createGradebook(input);\n            props.updateGradebookList(input);\n        } /* If gradebook was selected and saved */ else {\n            props.createGradebook(choice);\n            props.updateGradebookList(choice);\n        }\n    }\n\n    function ListGradebooks() {\n        if (props.gradebookList.length > 0) {\n            return (\n                <React.Fragment>\n                    <p>or</p>\n                    <label htmlFor=\"select-gradebook\">Change Gradebook</label>\n\n                    <div className=\"input-group mb-3 d-flex justify-content-center justify-content-md-start\">\n                        <select\n                            // defaultValue={currentSelect.gradebookName}\n                            className=\"custom-select\"\n                            id=\"select-gradebook\"\n                            onChange={handleChange}\n                            value={choice}\n                        >\n                            {props.gradebookList.map((gradebook, i) => {\n                                return (\n                                    <option\n                                        key={\"gb\" + i}\n                                        value={gradebook}\n                                        name={gradebook}\n                                    >\n                                        {gradebook}\n                                    </option>\n                                );\n                            })}\n                        </select>\n                        <div\n                            className=\"input-group-append\"\n                            onClick={handleClick}\n                            id=\"save-gradebook\"\n                        >\n                            <label\n                                className=\"input-group-text\"\n                                htmlFor=\"inputGroupSelect02\"\n                                id=\"save-gradebook-label\"\n                            >\n                                save\n                            </label>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <h1 className=\"header\">Gradebook</h1>\n            <hr />\n            <div className=\"form-container\">\n                <section>\n                    <DropDown\n                        buttonTitle=\"First Gradebook?\"\n                        content=\"Creating a gradebook will automatically create a new\n                            google sheet in your PE Clipboard folder. Any\n                            classes you add will be added as tabs. To customize\n                            daily points and notes change them in settings from\n                            the app. you may change values within the google\n                            sheets in the daily points and weekly points columns\n                            but changing anything else in google sheets may cause problems with the\n                            app.\"\n                    />\n                </section>\n                <br />\n\n                <label htmlFor=\"create-gradebook\">Create Gradebook</label>\n                <div className=\"input-group mb-3 d-flex justify-content-center justify-content-md-start\">\n                    <input\n                        id=\"create-gradebook\"\n                        type=\"text\"\n                        value={input}\n                        placeholder=\"Gradebook Name\"\n                        className=\"text-input\"\n                        onChange={handleChange}\n                    />\n                    <div className=\"input-group-append\">\n                        <label\n                            className=\"input-group-text\"\n                            htmlFor=\"create-gradebook\"\n                            id=\"save-gradebook\"\n                            onClick={handleClick}\n                        >\n                            save\n                        </label>\n                    </div>\n                </div>\n\n                <ListGradebooks />\n                <span>\n                    <p>\n                        Current Gradebook:\n                        <span>\n                            <h4 className=\"inline\"> {props.gradebook}</h4>\n                        </span>\n                    </p>\n                </span>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GradebookPage);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    updatePage,\n    updateStudentList,\n    createStudent,\n} from \"../Redux/actions\";\nimport \"./ListStudents.scss\";\n\nconst mapStateToProps = (state) => ({\n    currentPage: state.currentPage,\n    gradebook: state.gradebook,\n    class: state.class,\n    student: state.student,\n    studentList: state.studentList,\n    dailyPoints: state.settings.dailyPoints,\n});\n\nconst mapDispatchToProps = {\n    updatePage,\n    updateStudentList,\n    createStudent,\n};\n\nfunction ListStudents(props) {\n    const [studentPoints, setStudentPoints] = useState({});\n    const [attendance, setAttendance] = useState({});\n    const classKey = props.gradebook + \"-\" + props.class;\n\n    useEffect(() => {\n        props.updatePage(\"Students\");\n        const studentsExist = props.studentList[classKey];\n        if (studentsExist) {\n            const totalStudents = props.studentList[classKey].length;\n            console.log(\"studentList length: :\", totalStudents);\n            setStudentPoints(() => {\n                let newState = {};\n                for (let i = 0; i < totalStudents; i++) {\n                    let studentId = i + \"-student\";\n                    newState = { ...newState, [studentId]: props.dailyPoints };\n                }\n                console.log(\"newState\", newState);\n                return newState;\n            });\n            setAttendance(() => {\n                let newState = {};\n                for (let i = 0; i < totalStudents; i++) {\n                    let studentId = i + \"-student\";\n                    newState = { ...newState, [studentId]: \"P\" };\n                }\n                console.log(\"newState\", newState);\n                return newState;\n            });\n        }\n    }, []);\n\n    function handleChange(e) {\n        if (e.target.id.slice(2) === \"custom-note\") {\n            console.log(\"custom note: \", e.target.value);\n        }\n    }\n\n    function handleDecrement(e) {\n        //decrease student points by one.\n        const studentId = e.target.id[0] + \"-student\";\n        let currentPoints = studentPoints[studentId];\n        if (currentPoints > 0) {\n            --currentPoints;\n        }\n        setStudentPoints((prevState) => ({\n            ...prevState,\n            [studentId]: currentPoints,\n        }));\n    }\n\n    function handleIncrement(e) {\n        //increase student points by one.\n        const studentId = e.target.id[0] + \"-student\";\n        let currentPoints = studentPoints[studentId];\n        ++currentPoints;\n        setStudentPoints((prevState) => ({\n            ...prevState,\n            [studentId]: currentPoints,\n        }));\n    }\n\n    function handleAttendance(e) {\n        const studentId = e.target.id[0] + \"-student\";\n        let currentAttendance = attendance[studentId];\n        console.log(\"attendance id: \", e.target.id);\n        if (currentAttendance === \"P\") {\n            setAttendance({ ...attendance, [studentId]: \"A\" });\n        } else if (currentAttendance === \"A\") {\n            setAttendance({ ...attendance, [studentId]: \"T\" });\n        } else {\n            setAttendance({ ...attendance, [studentId]: \"P\" });\n        }\n    }\n\n    const studentButtons = props.studentList[classKey].map((student, i) => {\n        const studentId = i + \"-student\";\n\n        return (\n            <div className=\"student\">\n                <div className=\"flex-space-between\">\n                    {/* Student Button with their name */}\n                    <input\n                        className=\"tl-round student-button button\"\n                        type=\"button\"\n                        key={student}\n                        id={i + \"-\" + student}\n                        name={student}\n                        value={student}\n                        onClick={handleDecrement}\n                    />\n                    <input\n                        className=\"tr-round button daily-points \"\n                        key={i + \"-points\"}\n                        name=\"daily-points\"\n                        type=\"button\"\n                        id={i + \"-points\"}\n                        value={studentPoints[studentId]}\n                        onClick={handleIncrement}\n                    />\n                </div>\n                <div className=\"flex-space-between notes\" data-toggle=\"off\">\n                    <input\n                        className={\n                            \"bl-round button absent note\" +\n                            \" \" +\n                            attendance[studentId]\n                        }\n                        name=\"attendance\"\n                        type=\"button\"\n                        id={i + \"-attendance\"}\n                        data-toggle=\"off\"\n                        value={attendance[studentId]}\n                        onClick={handleAttendance}\n                    />\n                    <input\n                        className=\"button absent note \"\n                        name=\"note1\"\n                        type=\"button\"\n                        id={i + \"-note1\"}\n                        data-toggle=\"off\"\n                        value=\"NP\"\n                    />\n                    <input\n                        className=\"button absent note\"\n                        name=\"note2\"\n                        type=\"button\"\n                        id={i + \"-note2\"}\n                        data-toggle=\"off\"\n                        value=\"ND\"\n                    />\n                    <input\n                        className=\"button absent note \"\n                        name=\"note3\"\n                        type=\"button\"\n                        id={i + \"-note3\"}\n                        data-toggle=\"off\"\n                        value=\"C\"\n                    />\n                    <input\n                        className=\"br-round button absent note \"\n                        style={{ textAlign: \"center\" }}\n                        name=\"attendance\"\n                        type=\"text\"\n                        id={i + \"-custom-note\"}\n                        data-toggle=\"off\"\n                        defaultValue=\"?\"\n                        onChange={handleChange}\n                    />\n                </div>\n            </div>\n        );\n    });\n    return studentButtons;\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListStudents);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    updatePage,\n    updateStudentList,\n    createStudent,\n} from \"../../../Redux/actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router\";\nimport ListStudents from \"../../../components/ListStudents\";\nimport \"./StudentPage.scss\";\n\nconst mapStateToProps = (state) => ({\n    currentPage: state.currentPage,\n    gradebook: state.gradebook,\n    class: state.class,\n    student: state.student,\n    studentList: state.studentList,\n    dailyPoints: state.settings.dailyPoints,\n});\n\nconst mapDispatchToProps = {\n    updatePage,\n    updateStudentList,\n    createStudent,\n};\n\nfunction StudentsPage(props) {\n    const [toggleDelete, setToggleDelete] = useState(false);\n    const [newStudent, setNewStudent] = useState(\"\");\n    const [showModal, setShowModal] = useState(false);\n\n    const classKey = props.gradebook + \"-\" + props.class;\n\n    useEffect((props) => {\n        props.updatePage(\"Students\");\n    }, []);\n\n    const history = useHistory();\n\n    const addStudentModal = (\n        <Modal show={showModal} centered size=\"sm\" onHide={toggleModal}>\n            <Modal.Header closeButton className=\"bg-primary\">\n                <Modal.Title className=\"text-white\">Add Student</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"text-dark\">\n                <label htmlFor=\"create-student text-align-center\">\n                    Add Student\n                </label>\n                <div className=\"input-group mb-3 d-flex justify-content-start\">\n                    <input\n                        id=\"create-student\"\n                        type=\"text\"\n                        value={newStudent}\n                        placeholder=\"Student Name\"\n                        className=\"text-input\"\n                        onChange={handleChange}\n                        onKeyDown={handleSave}\n                    />\n                </div>\n                <p>Press Enter or click add</p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"success\"\n                    name=\"cancel\"\n                    id=\"save-student\"\n                    onClick={handleSave}\n                >\n                    Add\n                </Button>\n                <Button variant=\"primary\" name=\"delete\" onClick={toggleModal}>\n                    Finished\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n\n    function handleChange(e) {\n        if (e.target.id === \"create-student\") {\n            setNewStudent(e.target.value);\n        } else if (e.target.id.slice(2) === \"custom-note\") {\n            console.log(\"custom note: \", e.target.value);\n        }\n    }\n\n    function handleSave(e) {\n        console.log(\"e.key and e.target.id: \", e.key + \", \" + e.target.id);\n        if (\n            (newStudent && e.key === \"Enter\") ||\n            (newStudent && e.target.id === \"save-student\")\n        ) {\n            props.createStudent(newStudent);\n            setNewStudent(\"\");\n        }\n    }\n\n    function handleDelete(e) {\n        setToggleDelete(!toggleDelete);\n    }\n\n    function addStudentRoster() {\n        history.push(\"/roster\");\n    }\n\n    function toggleModal(e) {\n        if (e && e.currentTarget.id === \"add-class-button\") {\n            setShowModal(true);\n        } else {\n            setShowModal(false);\n            setNewStudent(\"\");\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <h1 className=\"header\">{props.class}</h1>\n            <hr />\n            <div className=\"form-container\">\n                {props.studentList[classKey] ? (\n                    <ListStudents />\n                ) : (\n                    addStudentRoster\n                )}\n                {showModal ? (\n                    addStudentModal\n                ) : (\n                    <div className=\"d-flex justify-content-between align-items-center w-100\">\n                        <div id=\"add-class-button\" onClick={toggleModal}>\n                            <FontAwesomeIcon\n                                name=\"add-icon\"\n                                icon={faPlusCircle}\n                                className=\"plus-icon m-4\"\n                            />\n                        </div>\n\n                        <Button\n                            className=\"submit-button btn-lg\"\n                            id=\"submit-button\"\n                        >\n                            Submit\n                        </Button>\n\n                        <div onClick={handleDelete} id=\"delete-a-class\">\n                            <FontAwesomeIcon\n                                name=\"delete-icon\"\n                                icon={faMinusCircle}\n                                className={\n                                    toggleDelete\n                                        ? \"minus-icon m-4 highlight\"\n                                        : \"minus-icon m-4\"\n                                }\n                            />\n                            <br />\n                        </div>\n                    </div>\n                )}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentsPage);\n","export function saveRoster(e, callback) {\n    const csvInput = e.target.files[0];\n    const reader = new FileReader();\n    let formattedArr = [];\n    console.log(\"1st formattedArr: \", formattedArr);\n\n    reader.onload = function () {\n        const arr = reader.result.split(\"\\n\");\n\n        for (let student of arr) {\n            const cleanedStudent = cleanText(student);\n            if (cleanedStudent) {\n                formattedArr = [...formattedArr, cleanedStudent];\n            }\n        }\n        console.log(\"2nd formattedArr array?: \", formattedArr[3]);\n        return callback(formattedArr);\n        \n    }\n\n    // start reading the file. When it is done, calls the onload event defined above.\n    reader.readAsText(csvInput);\n}\n\nfunction cleanText(string) {\n    let cleanString = string;\n    const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    if (cleanString && !isNaN(Number(cleanString[0]))) {\n        cleanString = cleanString.slice(1);\n        return cleanText(cleanString);\n    }\n    if (\n        cleanString &&\n        cleanString[0].toUpperCase() === cleanString[0].toLowerCase() &&\n        isNaN(Number(cleanString[0]))\n    ) {\n        cleanString = cleanString.slice(1);\n        return cleanText(cleanString);\n    }\n    if (\n        cleanString &&\n        cleanString[string.length - 1].toUpperCase() ===\n            cleanString[string.length - 1].toLowerCase() &&\n        !nums.includes(Number(cleanString[string.length - 1]))\n    ) {\n        cleanString = cleanString.slice(0, cleanString.length - 1);\n\n        return cleanText(cleanString);\n    }\n    if (cleanString.length > 0) {\n        return cleanString;\n    } else {\n        return null;\n    }\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport DropDown from \"../../../components/DropDown/DropDown\";\nimport { updatePage, updateStudentList } from \"../../../Redux/actions\";\nimport { saveRoster } from \"../../../Lib/saveRoster\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\n\nconst mapStateToProps = (state) => ({\n    currentPage: state.currentPage,\n    class: state.class,\n    student: state.student,\n    studentList: state.studentList,\n});\n\nconst mapDispatchToProps = {\n    updatePage,\n    updateStudentList,\n};\n\nfunction RosterPage(props) {\n    const [roster, setRoster] = useState(\"\");\n    const history = useHistory();\n\n    function handleChange(e) {\n        saveRoster(e, (response) => {\n            setRoster(response);\n            console.log(\"response: \", response )\n            props.updateStudentList(response);\n        });\n        //props.updateStudentList(response);\n\n        setTimeout(() => {\n            history.push(\"/students\");\n        }, 2000);\n    }\n\n    function ListStudents() {}\n\n    function AddStudents() {\n        return (\n            <React.Fragment>\n                <div className=\"form-container\">\n                    <section>\n                        <DropDown\n                            buttonTitle=\"Uploading Rosters\"\n                            content=\"To upload a roster, the file should be saved as a csv file (ends with .csv). When creating the file through excel, sheets, numbers or a similar spreadsheet program, place all students in the first column with one student in each row.  If you want names to be alphabatized, place last names first folowed by a comma then first names.\"\n                        />\n                    </section>\n                    <br />\n                    <Button\n                        variant={roster ? \"success\" : \"primary\"}\n                        className=\"mb-4\"\n                    >\n                        <label htmlFor=\"upload-roster\" className=\"\">\n                            {roster ? \"Success\" : \"Upload File\"}\n                        </label>\n                    </Button>\n                    <div className=\"input-group mb-3 d-flex justify-content-center justify-content-md-start\">\n                        <input\n                            id=\"upload-roster\"\n                            type=\"file\"\n                            accept=\".csv\"\n                            className=\"file\"\n                            onChange={handleChange}\n                            hidden\n                        />\n                        <div className=\"input-group-append\">\n                            <p>\n                                ( WARNING: Uploading a roster will overwrite\n                                your current roster! )\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <h1 className=\"header\">{props.class}</h1>\n            <hr />\n            {props.studentsList ? <ListStudents /> : <AddStudents />}\n        </React.Fragment>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RosterPage);\n","import React from \"react\";\n\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\n\n\nexport function InfoPage({title}){\n    return (\n        <div>\n        <h1 className=\"header\">Info</h1>\n        <hr/>\n        \n        </div>\n    )\n}\n\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n    getClasses,\n    getGradebookList,\n    deleteGradebook,\n    deleteClass,\n} from \"../../Redux/actions\";\n\nconst mapStateToProps = (state) => {\n    return {\n        gradebook: state.gradebook,\n        getGradebookList: state.getGradebookList,\n        classList: state.classList,\n        currentPage: state.currentPage,\n    };\n};\n\nconst mapDispatchToProps = {\n    getClasses,\n    getGradebookList,\n    deleteGradebook,\n    deleteClass,\n};\n\nexport function SettingsPage(props) {\n    console.log('settingsProps: ',props.currentPage)\n    return (\n        <React.Fragment>\n            <h1 className=\"header\">Settings</h1>\n            <hr/>\n            <div className=\"form-container\">\n                \n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage);\n","import React, { Component } from \"react\";\nimport \"./NavMenu.scss\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { updateLogin, updatePage } from \"../../Redux/actions\";\nimport { connect } from \"react-redux\";\n\nconst links = [\n    { to: \"/classes\", text: \"Classes\", key: \"link1\" },\n    { to: \"/gradebook\", text: \"Gradebook\", key: \"link2\" },\n    { to: \"/info\", text: \"Info\" },\n    { to: \"/settings\", text: \"Settings\", key: \"link3\" },\n    { to: \"/\", text: \"Logout\", key: \"link4\" },\n];\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.signedIn,\n        googleAuth: state.googleAuth,\n        currentPage: state.currentPage,\n    };\n};\n\nconst mapDispatchToProps = {\n    updateLogin,\n    updatePage,\n};\nclass NavMenu extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false,\n            rosterNav: false,\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidUpdate() {\n        if (this.props.currentPage === \"Students\") {\n           \n            if (links.length !== 6) {\n                links.push({ to: \"/roster\", text: \"Roster\", key: \"link5\" });\n                this.setState({ rosterNav: true });\n              \n            }\n        } else if (this.props.currentPage !== \"Students\") {\n         \n            if (links.length === 6) {\n                links.pop();\n                this.setState({ rosterNav: false });\n          \n            }\n        }\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        });\n    }\n\n    logOut = () => {\n        (async () => {\n            await this.props.googleAuth.googleAuth.signOut();\n            this.props.updateLogin(false);\n\n            window.location.reload();\n            //renderSigninButton(props.googleAuth.gapi);\n        })();\n    };\n\n    handleClick(e) {\n        if (e.target.text === \"Logout\") {\n            this.logOut();\n        }\n        this.props.updatePage(e.target.text);\n        this.toggle();\n    }\n\n    createNavItem = ({ to, text, className, key }) => (\n        <NavItem key={\"Nav-item\" + key}>\n            {/* //NavLink below is from react router not reactstrap */}\n            <NavLink\n                key={key}\n                to={to}\n                className={`${className} nav-text`}\n                onClick={this.handleClick}\n                text={text}\n            >\n                {text}\n            </NavLink>\n        </NavItem>\n    );\n\n    render() {\n        return (\n            <div>\n                <Navbar color=\"dark\" light expand=\"md\" fixed=\"top\">\n                    <NavbarBrand className=\"nav-text\" href=\"/\">\n                        PE Clipboard\n                    </NavbarBrand>\n                    <NavbarToggler\n                        className=\"nav-text\"\n                        id=\"toggler\"\n                        onClick={this.toggle}\n                    />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"nav-text ml-auto\" navbar>\n                            {links.map(this.createNavItem)}\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavMenu);\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { MainReducer } from \"./reducers\";\n\nconst initialState = {\n    signedIn: false,\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    userImg: \"\",\n    googleAuth: {},\n    currentPage: \"Classes\",\n    gradebook: \"\",\n    gradebookList: [],\n    class: \"\",\n    classList: {},\n    student: \"\",\n    studentList: {},\n    settings: {\n        dailyPoints: 10,\n        note1: \"ND\",\n        note2: \"NP\",\n        note3: \"P\",\n    },\n    todaysPoints: {},\n    totalPoints: {},\n    pointsPossible: {},\n    gradePercentage: {},\n};\n\nexport const store = createStore(\n    MainReducer,\n    initialState,\n    applyMiddleware(thunk)\n);\n","import * as ActionTypes from \"./actionTypes\";\n\nexport const MainReducer = (state, action) => {\n    //currentGb and currentClass are used for multiple cases\n    const currentGb = state.gradebook;\n    const currentClass = state.class;\n\n    console.log(\"type and payload: \", action.type + \", \" + action.payload);\n    switch (action.type) {\n        case ActionTypes.UPDATE_LOGIN:\n            return { ...state, signedIn: action.payload };\n        case ActionTypes.UPDATE_USER_INFO:\n            return { ...state, ...action.payload };\n        case ActionTypes.UPDATE_GOOGLEAUTH:\n            return { ...state, googleAuth: action.payload };\n        case ActionTypes.UPDATE_PAGE:\n            return { ...state, currentPage: action.payload.currentPage };\n        case ActionTypes.UPDATE_STORE:\n            console.log(\"updating store: \", action.payload);\n            return { ...state, ...action.payload };\n        case ActionTypes.CREATE_GRADEBOOK:\n            return { ...state, gradebook: action.payload };\n        case ActionTypes.UPDATE_GRADEBOOKLIST:\n            const gbMatch = action.payload;\n\n            if (!state.gradebookList.some((obj) => obj === gbMatch)) {\n                return {\n                    ...state,\n                    gradebookList: [...state.gradebookList, action.payload],\n                };\n            } else {\n                return { ...state };\n            }\n        case ActionTypes.GET_GRADEBOOK:\n            return { ...state };\n        case ActionTypes.DELETE_GRADEBOOK:\n            return { ...state };\n\n        case ActionTypes.CREATE_CLASS:\n            console.log(\"create class payload: \", action.payload);\n            return { ...state, class: action.payload };\n\n        case ActionTypes.UPDATE_CLASSES:\n            const cMatch = action.payload;\n\n            if (\n                state.classList[currentGb] &&\n                !state.classList[currentGb].some((obj) => obj === cMatch)\n            ) {\n                return {\n                    ...state,\n                    classList: {\n                        ...state.classList,\n                        [currentGb]: [\n                            ...state.classList[currentGb],\n                            action.payload,\n                        ],\n                    },\n                };\n            } else if (!state.classList.currentGb) {\n                console.log(\"duplicate or first time gradebook\");\n                return {\n                    ...state,\n                    classList: {\n                        ...state.classList,\n                        [currentGb]: [action.payload],\n                    },\n                };\n            }\n            return { ...state };\n\n        case ActionTypes.GET_CLASSES:\n            return { ...state };\n        case ActionTypes.DELETE_CLASS:\n            const currentCl = state.classList[currentGb].filter(\n                (item) => item !== action.payload\n            );\n            return {\n                ...state,\n                classList: { ...state.classList, [currentGb]: currentCl },\n            };\n\n        case ActionTypes.CREATE_STUDENT:\n            const sMatch = action.payload;\n            //Check if there is alreade a student list for the current class and whether there is a student with the same name.\n            if (\n                state.studentList[currentGb + \"-\" + currentClass] &&\n                !state.studentList[currentGb + \"-\" + currentClass].some(\n                    (student) => student === sMatch\n                )\n            ) {\n                console.log(\"adding student: \", action.payload);\n                console.log({\n                    ...state,\n                    studentList: {\n                        ...state.studentList,\n                        [currentGb + \"-\" + currentClass]: [\n                            ...state.studentList[\n                                currentGb + \"-\" + currentClass\n                            ],\n                            action.payload,\n                        ],\n                    },\n                });\n                return {\n                    ...state,\n                    studentList: {\n                        ...state.studentList,\n                        [currentGb + \"-\" + currentClass]: [\n                            ...state.studentList[\n                                currentGb + \"-\" + currentClass\n                            ],\n                            action.payload,\n                        ],\n                    },\n                };\n            } else {\n                console.log(\"not adding student\");\n                return { ...state };\n            }\n\n        case ActionTypes.UPDATE_STUDENTLIST:\n            console.log(\"current class type: \", typeof state.class);\n            console.log(\n                \"type of property: \",\n                typeof state.studentList[currentClass]\n            );\n            if (state.studentList[currentGb + \"-\" + currentClass]) {\n                return {\n                    ...state,\n                    [state.studentList[currentGb + \"-\" + currentClass]]: [\n                        ...action.payload,\n                    ],\n                };\n            }\n\n            if (!state.studentList[currentGb + \"-\" + currentClass]) {\n                console.log(\"duplicate or first time class\");\n                return {\n                    ...state,\n                    studentList: {\n                        ...state.studentList,\n                        [currentGb + \"-\" + currentClass]: [...action.payload],\n                    },\n                };\n            }\n            return { ...state };\n        default:\n            console.log(\"default action type: \", action);\n            return state;\n    }\n};\n","import SignInPage from \"./Pages/SignInPage/SignInPage\";\nimport \"./App.scss\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router\";\nimport ClassesPage from \"./Pages/ClassesPage/ClassesPage\";\nimport GradebookPage from \"./Pages/GradebookPage/GradebookPage\";\nimport StudentsPage from \"./Pages/ClassesPage/StudentsPage/StudentsPage\";\nimport RosterPage from \"./Pages/ClassesPage/RosterPage/RosterPage\";\nimport { InfoPage } from \"./Pages/InfoPage/InfoPage\";\nimport SettingsPage from \"./Pages/SettingsPage/SettingsPage\";\nimport React from \"react\";\nimport NavMenu from \"./components/NavMenu/NavMenu\";\nimport { connect } from \"react-redux\";\nimport { store } from \"./Redux/createStore\";\nimport { updatePage } from \"./Redux/actions\";\nimport { writeUserData } from \"./Lib/LinkReduxToDb\";\n\n\n\n\n\nconst mapStateToProps = (state) => ({\n    signedIn: state.signedIn,\n    id: state.id,\n    email: state.email,\n    name: state.name,\n    userImg: state.userImg,\n    gradebook: state.gradebook,\n    gradebookList: state.gradebookList,\n    classList: state.classList,\n    class: state.class,\n    student: state.student,\n    studentList: state.studentList\n});\n\nconst mapDispatchToProps = {\n    updatePage,\n};\n\nclass App extends React.Component {\n    componentDidMount() {\n        !this.props.gradebook && this.props.updatePage(\"Gradebook\");\n  \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // check on previous state\n        // only write when it's different with the new state\n        if (\n            (this.props.signedIn && prevProps.id !== this.props.id) ||\n            prevProps.gradebook !== this.props.gradebook ||\n            prevProps.gradebookList !== this.props.gradebookList ||\n            prevProps.classList !== this.props.classList ||\n            prevProps.studentList !== this.props.studentList\n        ) {\n            const userObject = {\n                id: this.props.id,\n                name: this.props.name,\n                email: this.props.email,\n                userImg: this.props.userImg,\n                gradebook: this.props.gradebook,\n                gradebookList: this.props.gradebookList,\n                classList: this.props.classList,\n                class: this.props.class,\n                student: this.props.student,\n                studentList: this.props.studentList\n            };\n\n            if (this.props.id) {\n                console.log(\"studentList: \", this.props.studentList)\n                writeUserData(this.props.id, userObject);\n            }\n        }\n    }\n\n    render() {\n        console.log(\"store\", store.getState());\n      \n        return (\n            //Check if user is signed in, if so, render navbar\n            <div className=\"App\">\n                {this.props.signedIn ? (\n                    <React.Fragment>\n                        <NavMenu />\n                        <main className=\"container\">\n                            <Switch>\n                                {/* If no gradebook is found, start on gradebook page otherwise\n                                start on class page. */}\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    render={() => {\n                                        return this.props.gradebook ? (\n                                            <Redirect to=\"/classes\" />\n                                        ) : (\n                                            <Redirect to=\"/gradebook\" />\n                                        );\n                                    }}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/classes\"\n                                    component={ClassesPage}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/gradebook\"\n                                    component={GradebookPage}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/info\"\n                                    render={() => (\n                                        <InfoPage\n                                            title={this.props.currentPage}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/settings\"\n                                    component={SettingsPage}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/students\"\n                                    component={StudentsPage}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/roster\"\n                                    component={RosterPage}\n                                />\n                            </Switch>\n                        </main>\n                    </React.Fragment>\n                ) : (\n                    <SignInPage />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import { db } from \"./FirebaseConfig\";\nimport { ref, onValue, update } from \"firebase/database\";\n\nexport function writeUserData(userId, userObject) {\n    if (ref(db, \"/users/\" + userId)) {\n        const userRef = ref(db, \"/users/\" + userId);\n        if (userObject) {\n           \n            update(userRef, userObject);\n     \n        }\n    }\n}\n\nexport function getAllData() {}\n\nexport function getUserData(userId) {\n    if (!userId) {\n        return console.log(\"No user Id\");\n    }\n    const userRef = ref(db, \"/users/\" + userId);\n    onValue(userRef, (snapshot) => {\n        const data = snapshot.val();\n\n        return data;\n    });\n \n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/createStore\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n//google drive connection\n"],"sourceRoot":""}